{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["DEAFULT_PICTURE","MovieCard","movie","imgUrl","title","description","imdbUrl","posterLink","useMemo","className","src","alt","href","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addToList","useState","setQuery","setMovie","error","setError","isLoading","setIsLoading","handleSubmit","useCallback","event","preventDefault","handleSearchSubmit","a","movieData","Title","Plot","imdbID","Poster","handleInputChange","target","value","searchButtonDisabled","onSubmit","htmlFor","type","id","placeholder","classNames","onChange","onClick","disabled","App","setMovies","newMovie","every","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e91917aa.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\n// eslint-disable-next-line\nconst DEAFULT_PICTURE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl, title, description, imdbUrl,\n  } = movie;\n\n  const posterLink = useMemo(() => {\n    return imgUrl !== 'N/A' ? imgUrl : DEAFULT_PICTURE;\n  }, [imgUrl, DEAFULT_PICTURE]);\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img data-cy=\"moviePoster\" src={posterLink} alt=\"Film logo\" />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n            </figure>\n          </div>\n\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a447e81e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, {\n  FormEvent, useCallback, useMemo, useState,\n} from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { ResponseError } from '../../types/ReponseError';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addToList: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addToList }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState<ResponseError | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = useCallback((event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  }, []);\n\n  const handleSearchSubmit = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      const movieData = await getMovie(query);\n\n      if ('Error' in movieData) {\n        setError(movieData);\n        setMovie(null);\n      } else {\n        const {\n          Title, Plot, imdbID, Poster,\n        } = movieData;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbId: imdbID,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        });\n\n        setError(null);\n      }\n    } catch {\n      setError({ Response: 'False', Error: 'unexpected error' });\n      setMovie(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n      setError(null);\n    },\n    [],\n  );\n\n  const searchButtonDisabled = useMemo(() => query === '', [query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error.Error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={handleSearchSubmit}\n              disabled={searchButtonDisabled}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {!!movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie !== null) {\n                    addToList(movie);\n                    setQuery('');\n                    setMovie(null);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {!!movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          movie &&\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addToList = useCallback((newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbId !== newMovie.imdbId)) {\n      setMovies(prevState => [...prevState, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addToList={addToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}